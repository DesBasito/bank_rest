---
openapi: "3.0.1"
info:
  title: "Bank REST API"
  version: "1.0.0"
servers:
- url: "http://localhost:8080/api/v1"
  description: "Generated server url"
paths:
  /auth/sign-up:
    post:
      tags:
      - "Аутентификация"
      summary: "Регистрация пользователя"
      operationId: "signUp"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
        required: true
      responses:
        default:
          description: "Возвращает токен после регистрации"
          content:
            '*/*':
              schema:
                type: "string"
                enum:
                - "100 CONTINUE"
                - "101 SWITCHING_PROTOCOLS"
                - "102 PROCESSING"
                - "103 EARLY_HINTS"
                - "103 CHECKPOINT"
                - "200 OK"
                - "201 CREATED"
                - "202 ACCEPTED"
                - "203 NON_AUTHORITATIVE_INFORMATION"
                - "204 NO_CONTENT"
                - "205 RESET_CONTENT"
                - "206 PARTIAL_CONTENT"
                - "207 MULTI_STATUS"
                - "208 ALREADY_REPORTED"
                - "226 IM_USED"
                - "300 MULTIPLE_CHOICES"
                - "301 MOVED_PERMANENTLY"
                - "302 FOUND"
                - "302 MOVED_TEMPORARILY"
                - "303 SEE_OTHER"
                - "304 NOT_MODIFIED"
                - "305 USE_PROXY"
                - "307 TEMPORARY_REDIRECT"
                - "308 PERMANENT_REDIRECT"
                - "400 BAD_REQUEST"
                - "401 UNAUTHORIZED"
                - "402 PAYMENT_REQUIRED"
                - "403 FORBIDDEN"
                - "404 NOT_FOUND"
                - "405 METHOD_NOT_ALLOWED"
                - "406 NOT_ACCEPTABLE"
                - "407 PROXY_AUTHENTICATION_REQUIRED"
                - "408 REQUEST_TIMEOUT"
                - "409 CONFLICT"
                - "410 GONE"
                - "411 LENGTH_REQUIRED"
                - "412 PRECONDITION_FAILED"
                - "413 PAYLOAD_TOO_LARGE"
                - "413 REQUEST_ENTITY_TOO_LARGE"
                - "414 URI_TOO_LONG"
                - "414 REQUEST_URI_TOO_LONG"
                - "415 UNSUPPORTED_MEDIA_TYPE"
                - "416 REQUESTED_RANGE_NOT_SATISFIABLE"
                - "417 EXPECTATION_FAILED"
                - "418 I_AM_A_TEAPOT"
                - "419 INSUFFICIENT_SPACE_ON_RESOURCE"
                - "420 METHOD_FAILURE"
                - "421 DESTINATION_LOCKED"
                - "422 UNPROCESSABLE_ENTITY"
                - "423 LOCKED"
                - "424 FAILED_DEPENDENCY"
                - "425 TOO_EARLY"
                - "426 UPGRADE_REQUIRED"
                - "428 PRECONDITION_REQUIRED"
                - "429 TOO_MANY_REQUESTS"
                - "431 REQUEST_HEADER_FIELDS_TOO_LARGE"
                - "451 UNAVAILABLE_FOR_LEGAL_REASONS"
                - "500 INTERNAL_SERVER_ERROR"
                - "501 NOT_IMPLEMENTED"
                - "502 BAD_GATEWAY"
                - "503 SERVICE_UNAVAILABLE"
                - "504 GATEWAY_TIMEOUT"
                - "505 HTTP_VERSION_NOT_SUPPORTED"
                - "506 VARIANT_ALSO_NEGOTIATES"
                - "507 INSUFFICIENT_STORAGE"
                - "508 LOOP_DETECTED"
                - "509 BANDWIDTH_LIMIT_EXCEEDED"
                - "510 NOT_EXTENDED"
                - "511 NETWORK_AUTHENTICATION_REQUIRED"
  /auth/sign-in:
    post:
      tags:
      - "Аутентификация"
      summary: "Авторизация пользователя"
      operationId: "signIn"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
        required: true
      responses:
        default:
          description: "Возвращает токен после авторизации, рефреш устанавливает в\
            \ куку"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /auth/refresh:
    post:
      tags:
      - "Аутентификация"
      summary: "Обновления access токена для JWT"
      operationId: "refreshToken"
      parameters:
      - name: "refreshToken"
        in: "cookie"
        required: true
        schema:
          type: "string"
          format: "uuid"
      responses:
        default:
          description: "Возвращает новый обновленный токен, рефреш устанавливает в\
            \ куку"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
components:
  schemas:
    Card:
      required:
      - "balance"
      - "cardNumber"
      - "createdAt"
      - "expiryDate"
      - "owner"
      - "status"
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        cardNumber:
          type: "string"
        owner:
          $ref: "#/components/schemas/User"
        expiryDate:
          type: "string"
          format: "date"
        status:
          type: "string"
        balance:
          type: "number"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
    GrantedAuthority:
      type: "object"
      properties:
        authority:
          type: "string"
    Role:
      required:
      - "name"
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        users:
          uniqueItems: true
          type: "array"
          items:
            $ref: "#/components/schemas/User"
      description: "Список id ролей пользователя"
      example: "ADMIN(2) | USER(1)"
    SignUpRequest:
      required:
      - "name"
      - "passwordHash"
      - "phoneNumber"
      - "roleIds"
      - "surname"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Имя пользователя"
          example: "Сергей"
        surname:
          type: "string"
          description: "Фамилия пользователя"
          example: "Сергеев"
        middleName:
          type: "string"
          description: "Отчество пользователя"
          example: "Сергеевич"
        phoneNumber:
          pattern: "^\\+7\\([0-9]{3}\\)[0-9]{3}[0-9]{4}$"
          type: "string"
          description: "Мобильный телефон пользователя"
          example: "+7(900)1234567"
        passwordHash:
          maxLength: 11
          minLength: 5
          type: "string"
          description: "Пароль для пользователя"
          example: "password"
        roleIds:
          uniqueItems: true
          type: "array"
          description: "Список id ролей пользователя"
          example: "ADMIN(2) | USER(1)"
          items:
            $ref: "#/components/schemas/Role"
      description: "Запрос на регистрацию"
    User:
      required:
      - "createdAt"
      - "enabled"
      - "firstName"
      - "lastName"
      - "middleName"
      - "password"
      - "phoneNumber"
      type: "object"
      properties:
        id:
          type: "string"
        phoneNumber:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        middleName:
          type: "string"
        lastName:
          type: "string"
        enabled:
          type: "boolean"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
        cards:
          uniqueItems: true
          type: "array"
          items:
            $ref: "#/components/schemas/Card"
        roles:
          uniqueItems: true
          type: "array"
          items:
            $ref: "#/components/schemas/Role"
        accountNonExpired:
          type: "boolean"
        accountNonLocked:
          type: "boolean"
        credentialsNonExpired:
          type: "boolean"
        authorities:
          type: "array"
          items:
            $ref: "#/components/schemas/GrantedAuthority"
        username:
          type: "string"
    SignInRequest:
      required:
      - "password"
      - "phoneNumber"
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Номер телефона пользователя"
          example: "777010203"
        password:
          type: "string"
          description: "Пароль"
          example: "my_1secret1_password"
      description: "Запрос на аутентификацию"
    AuthResponse:
      type: "object"
      properties:
        accessToken:
          type: "string"
          description: "Access token"
      description: "Ответ после аутентификации"
