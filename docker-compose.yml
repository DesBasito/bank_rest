services:
  postgres:
    image: postgres:16
    container_name: bank_cards_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - bank_cards_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bank_cards_app
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      LOG_LEVEL_ROOT: ${LOG_LEVEL_ROOT}
      LOG_LEVEL_APP: ${LOG_LEVEL_APP}
      LOG_FILE_PATH: ${LOG_FILE_PATH}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bank_cards_network
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local

networks:
  bank_cards_network:
    driver: bridge